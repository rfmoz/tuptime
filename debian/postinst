#!/bin/sh
# postinst script for tuptime
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
# 	 * <postinst> `configure' <most-recently-configured-version>
# 	 * <old-postinst> `abort-upgrade' <new version>
# 	 * <conflictor's-postinst> `abort-remove' `in-favour' <package>
# 	   <new-version>
# 	 * <postinst> `abort-remove'
# 	 * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
# 	   <failed-install-package> <version> `removing'
# 	   <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
	configure)

		# Rename to underscore if previous exists
		getent passwd tuptime >/dev/null && usermod -l _tuptime tuptime
		getent group tuptime > /dev/null && groupmod -n _tuptime tuptime

		# Create user if not exists
		if ! getent passwd _tuptime >/dev/null ; then
			echo "Adding _tuptime user..."
			adduser --quiet --system --group --disabled-password \
			        --home "/var/lib/tuptime" \
			        --shell '/usr/sbin/nologin' \
			        --gecos 'Tuptime execution user,,,' \
			        --force-badname _tuptime
		fi

		# Ensure right ownership
		if [ -d /var/lib/tuptime ]; then
			chown _tuptime:_tuptime /var/lib/tuptime
			# When adduser is configured for DIR_MODE=0750,
			# the file mode ends up more closed than intended.
			chmod 0755 /var/lib/tuptime
			if [ -f /var/lib/tuptime/tuptime.db ]; then
				chown _tuptime:_tuptime /var/lib/tuptime/tuptime.db
			fi
		fi

		su -s /bin/sh _tuptime -c "tuptime -x"
	;;

	abort-upgrade|abort-remove|abort-deconfigure)
	;;

	*)
		echo "postinst called with unknown argument \`$1'" >&2
		exit 1
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
